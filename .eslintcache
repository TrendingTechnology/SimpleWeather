[{"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\index.js":"1","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\WeatherApp.js":"2","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\Weather.js":"3","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\CityForm.js":"4","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\helpers\\loadData.js":"5"},{"size":162,"mtime":1628510374691,"results":"6","hashOfConfig":"7"},{"size":623,"mtime":1628788184233,"results":"8","hashOfConfig":"7"},{"size":786,"mtime":1628785057701,"results":"9","hashOfConfig":"7"},{"size":468,"mtime":1628788637989,"results":"10","hashOfConfig":"7"},{"size":349,"mtime":1628771566100,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"70qhgp",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\index.js",[],["24","25"],"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\WeatherApp.js",["26","27"],"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\Weather.js",["28"],"import React, { useEffect, useState } from 'react';\r\nimport loadData from '../helpers/loadData';\r\nimport './Weather.css';\r\n\r\nconst Weather = (props) => {\r\n  const { location } = props;\r\n  const [temp, setTemp] = useState('NOT FOUND');\r\n\r\n  const loadWeather = async () => {\r\n    try {\r\n      const data = await loadData(location);\r\n      setTemp(data.current.temp_c);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadWeather(location);\r\n  }, [loadWeather, location]);\r\n\r\n  return (\r\n    <div className=\"weather border\">\r\n      <h1>How do you like the weather in {location}?</h1>\r\n      <h2>It's {temp} CÂ° outside :)</h2>\r\n      <button onClick={loadWeather} className=\"btn-update\">Update</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\CityForm.js",[],"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\helpers\\loadData.js",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":17,"nodeType":"35","messageId":"36","endLine":1,"endColumn":26},{"ruleId":"33","severity":1,"message":"37","line":1,"column":28,"nodeType":"35","messageId":"36","endLine":1,"endColumn":36},{"ruleId":"38","severity":1,"message":"39","line":9,"column":9,"nodeType":"40","endLine":16,"endColumn":4,"suggestions":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","The 'loadWeather' function makes the dependencies of useEffect Hook (at line 20) change on every render. To fix this, wrap the definition of 'loadWeather' in its own useCallback() Hook.","VariableDeclarator",["44"],"no-global-assign","no-unsafe-negation",{"desc":"45","fix":"46"},"Wrap the definition of 'loadWeather' in its own useCallback() Hook.",{"range":"47","text":"48"},[260,423],"useCallback(async () => {\r\n    try {\r\n      const data = await loadData(location);\r\n      setTemp(data.current.temp_c);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  })"]