[{"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\index.js":"1","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\Weather.js":"2","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\helpers\\loadData.js":"3","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\App.js":"4","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\CitySearch.js":"5","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\Condition.js":"6"},{"size":141,"mtime":1628794301586,"results":"7","hashOfConfig":"8"},{"size":529,"mtime":1628794641425,"results":"9","hashOfConfig":"8"},{"size":349,"mtime":1628771566100,"results":"10","hashOfConfig":"8"},{"size":1145,"mtime":1628796843354,"results":"11","hashOfConfig":"8"},{"size":597,"mtime":1628797314035,"results":"12","hashOfConfig":"8"},{"size":400,"mtime":1628797227134,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"70qhgp",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\index.js",[],"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\Weather.js",["28","29"],"import React, { useEffect, useState } from 'react';\r\nimport './Weather.css';\r\n\r\nconst Weather = (props) => {\r\n  const { temp } = props;\r\n  const { location } = props;\r\n  const { responseCity } = props;\r\n\r\n  if (!temp || location !== responseCity) {\r\n    return (\r\n      <div></div>\r\n    );\r\n  }\r\n\r\n  if (temp) {\r\n    return (\r\n      <div className=\"weather border\">\r\n        <h1>How do you like the weather in {location}?</h1>\r\n        <h2>It's {temp} CÂ° outside :)</h2>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Weather;",["30","31"],"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\helpers\\loadData.js",[],"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\App.js",["32"],"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\CitySearch.js",["33","34"],"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\Condition.js",["35","36"],{"ruleId":"37","severity":1,"message":"38","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":26},{"ruleId":"37","severity":1,"message":"41","line":1,"column":28,"nodeType":"39","messageId":"40","endLine":1,"endColumn":36},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":12,"column":9,"nodeType":"48","endLine":21,"endColumn":4},{"ruleId":"37","severity":1,"message":"38","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":26},{"ruleId":"37","severity":1,"message":"41","line":1,"column":28,"nodeType":"39","messageId":"40","endLine":1,"endColumn":36},{"ruleId":"37","severity":1,"message":"38","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":26},{"ruleId":"37","severity":1,"message":"41","line":1,"column":28,"nodeType":"39","messageId":"40","endLine":1,"endColumn":36},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"react-hooks/exhaustive-deps","The 'loadWeather' function makes the dependencies of useEffect Hook (at line 25) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'loadWeather' in its own useCallback() Hook.","VariableDeclarator","no-global-assign","no-unsafe-negation"]