[{"/Users/lirael/projects/weather-by-evergreen/src/index.js":"1","/Users/lirael/projects/weather-by-evergreen/src/App.js":"2","/Users/lirael/projects/weather-by-evergreen/src/redux/store.js":"3","/Users/lirael/projects/weather-by-evergreen/src/functions/loadData.js":"4","/Users/lirael/projects/weather-by-evergreen/src/redux/actions.js":"5","/Users/lirael/projects/weather-by-evergreen/src/components/Forecast.js":"6","/Users/lirael/projects/weather-by-evergreen/src/functions/useDebounce.js":"7","/Users/lirael/projects/weather-by-evergreen/src/components/CitySearch.js":"8","/Users/lirael/projects/weather-by-evergreen/src/components/WeatherCondition.js":"9","/Users/lirael/projects/weather-by-evergreen/src/components/WeatherIcon.js":"10","/Users/lirael/projects/weather-by-evergreen/src/components/CitiesList.js":"11","/Users/lirael/projects/weather-by-evergreen/src/components/WeatherToday.js":"12","/Users/lirael/projects/weather-by-evergreen/src/historyVar.js":"13"},{"size":346,"mtime":1633090923686,"results":"14","hashOfConfig":"15"},{"size":1532,"mtime":1633093546589,"results":"16","hashOfConfig":"15"},{"size":698,"mtime":1633090923687,"results":"17","hashOfConfig":"15"},{"size":336,"mtime":1628852645266,"results":"18","hashOfConfig":"15"},{"size":1232,"mtime":1633090923686,"results":"19","hashOfConfig":"15"},{"size":1658,"mtime":1633091627118,"results":"20","hashOfConfig":"15"},{"size":378,"mtime":1633090923685,"results":"21","hashOfConfig":"15"},{"size":1437,"mtime":1633094903598,"results":"22","hashOfConfig":"15"},{"size":684,"mtime":1633091627112,"results":"23","hashOfConfig":"15"},{"size":596,"mtime":1633090923683,"results":"24","hashOfConfig":"15"},{"size":169,"mtime":1633095081801,"results":"25","hashOfConfig":"15"},{"size":254,"mtime":1633093959470,"results":"26","hashOfConfig":"15"},{"size":96,"mtime":1633093546594,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ydtnc7",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lirael/projects/weather-by-evergreen/src/index.js",[],["60","61"],"/Users/lirael/projects/weather-by-evergreen/src/App.js",["62","63","64"],"/Users/lirael/projects/weather-by-evergreen/src/redux/store.js",[],"/Users/lirael/projects/weather-by-evergreen/src/functions/loadData.js",[],"/Users/lirael/projects/weather-by-evergreen/src/redux/actions.js",["65"],"export const SET_CITY = 'SET_CITY';\nexport const UPDATE_WEATHER = 'UPDATE_WEATHER';\n\nexport function setCity(city) {\n  return { type: SET_CITY, city }\n}\n\nexport function updateWeather(response) {\n  return { type: UPDATE_WEATHER, payload: response }\n}\n\nexport const initialState = {\n  location: '',\n  responseLocation: '',\n  country: '',\n  temp: '',\n  condition: '',\n  wind: '',\n  pressure: '',\n  humidity: '',\n  code: '',\n  isDay: ''\n}\n\nexport function weatherApp(state = initialState, action) {\n  switch (action.type) {\n    case SET_CITY:\n      return Object.assign({}, state, {\n        location: action.city\n      })\n    case UPDATE_WEATHER:\n      return Object.assign({}, state, {\n        responseLocation: action.payload.location.name,\n        country: action.payload.location.country,\n        temp: action.payload.current.temp_c,\n        condition: `it's ${(action.payload.current.condition.text).toLowerCase()}`,\n        wind: action.payload.current.wind_kph,\n        pressure: action.payload.current.pressure_mb,\n        humidity: action.payload.current.humidity,\n        code: action.payload.current.condition.code,\n        isDay: action.payload.current.is_day\n      })\n    default:\n      return state\n  }\n  return state;\n}\n","/Users/lirael/projects/weather-by-evergreen/src/components/Forecast.js",["66","67","68","69","70"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport WeatherIcon from './WeatherIcon';\nimport './Forecast.css';\n\nconst Forecast = (props) => {\n  const { location } = props;\n  const { responseLocation } = props;\n  const { country } = props;\n  const { temp } = props;\n  const { wind } = props;\n  const { pressure } = props;\n  const { humidity } = props;\n  const { code } = props;\n  const { isDay } = props;\n\n  // Conversion from kph to m/s\n  const windToMPS = (wind * 1000 / 3600).toFixed(1);\n  // Conversion from millibars to millimeters of mercury according to the formula\n  const pressureToMmOfMercury = ( pressure * 0.750063755419211).toFixed();\n  if (!temp || location.toLowerCase() !== responseLocation.toLowerCase()) {\n    return (\n      <div></div>\n    );\n  }\n\n  if (temp) {\n    return (\n      <div className=\"weather grid\">\n        <WeatherIcon></WeatherIcon>\n        <div className=\"temp\">\n          <h1>{temp.toFixed()}</h1>\n        </div>\n        <div className=\"flex properties\">\n          <div className=\"properties__value\">{windToMPS}<span>m/s</span></div>\n\n          <div className=\"properties__value\">{pressureToMmOfMercury}<span>mm Hg</span></div>\n          <div className=\"properties__value\">{humidity}<span>%</span></div>\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  location: state.location,\n  responseLocation: state.responseLocation,\n  country: state.country,\n  temp: state.temp,\n  wind: state.wind,\n  pressure: state.pressure,\n  humidity: state.humidity,\n  code: state.code,\n  isDay: state.isDay\n});\n\nexport default connect(mapStateToProps)(Forecast);\n","/Users/lirael/projects/weather-by-evergreen/src/functions/useDebounce.js",["71"],"import React, { useEffect, useState } from 'react';\n\nfunction useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      const handler = setTimeout(() => setDebouncedValue(value), delay);\n      return () => clearTimeout(handler);\n    }, [delay, value],\n  );\n\n  return debouncedValue;\n}\n\nexport default useDebounce;","/Users/lirael/projects/weather-by-evergreen/src/components/CitySearch.js",[],"/Users/lirael/projects/weather-by-evergreen/src/components/WeatherCondition.js",["72","73"],"import React, { useEffect, useState } from 'react';\nimport './WeatherCondition.css';\nimport { connect } from 'react-redux';\n\nconst WeatherCondition = (props) => {\n  const { location } = props;\n  const { responseLocation } = props;\n  const { condition } = props;\n\n  if (!condition || location.toLowerCase() !== responseLocation.toLowerCase()) {\n    return (\n      <span/>\n    );\n  }\n\n  if (condition) {\n    return (\n      <div className=\"condition\">{condition}</div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  location: state.location,\n  responseLocation: state.responseLocation,\n  condition: state.condition,\n})\n\nexport default connect(mapStateToProps)(WeatherCondition);\n\n","/Users/lirael/projects/weather-by-evergreen/src/components/WeatherIcon.js",["74"],"import React from 'react';\nimport { connect } from 'react-redux';\n\nconst WeatherIcon = (props) => {\n  const { code, isDay } = props;\n  let timeOfDay = \"day\";\n\n  if (!isDay) {\n    timeOfDay = \"night\";\n  }\n\n  const weatherSrc = `/assets/icons/${timeOfDay}/${code}.svg`;\n\n  return (\n    <div className=\"icon\">\n      <object data={process.env.PUBLIC_URL + weatherSrc} type=\"image/svg+xml\" className=\"icon\" alt=\"Icon of Weather\"/>\n    </div>\n  )\n\n}\n\nconst mapStateToProps = (state) => {\n  const { code, isDay } = state;\n  return { code, isDay };\n}\nexport default connect(mapStateToProps)(WeatherIcon);","/Users/lirael/projects/weather-by-evergreen/src/components/CitiesList.js",[],"/Users/lirael/projects/weather-by-evergreen/src/components/WeatherToday.js",[],"/Users/lirael/projects/weather-by-evergreen/src/historyVar.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":20,"column":6,"nodeType":"81","endLine":20,"endColumn":8,"suggestions":"82"},{"ruleId":"79","severity":1,"message":"80","line":26,"column":6,"nodeType":"81","endLine":26,"endColumn":8,"suggestions":"83"},{"ruleId":"79","severity":1,"message":"84","line":30,"column":27,"nodeType":"85","endLine":30,"endColumn":38},{"ruleId":"86","severity":1,"message":"87","line":46,"column":3,"nodeType":"88","messageId":"89","endLine":46,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"85","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"93","line":1,"column":28,"nodeType":"85","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"90","severity":1,"message":"94","line":10,"column":11,"nodeType":"85","messageId":"92","endLine":10,"endColumn":18},{"ruleId":"90","severity":1,"message":"95","line":15,"column":11,"nodeType":"85","messageId":"92","endLine":15,"endColumn":15},{"ruleId":"90","severity":1,"message":"96","line":16,"column":11,"nodeType":"85","messageId":"92","endLine":16,"endColumn":16},{"ruleId":"90","severity":1,"message":"97","line":1,"column":8,"nodeType":"85","messageId":"92","endLine":1,"endColumn":13},{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"85","messageId":"92","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"93","line":1,"column":28,"nodeType":"85","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"99","line":16,"column":7,"nodeType":"100","endLine":16,"endColumn":119},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location'. Either include it or remove the dependency array.","ArrayExpression",["103"],["104"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","Identifier","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-unused-vars","'useEffect' is defined but never used.","unusedVar","'useState' is defined but never used.","'country' is assigned a value but never used.","'code' is assigned a value but never used.","'isDay' is assigned a value but never used.","'React' is defined but never used.","jsx-a11y/alt-text","Embedded <object> elements must have alternative text by providing inner text, aria-label or aria-labelledby props.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"105","fix":"107"},"Update the dependencies array to be: [props.location]",{"range":"108","text":"109"},{"range":"110","text":"109"},[734,736],"[props.location]",[847,849]]