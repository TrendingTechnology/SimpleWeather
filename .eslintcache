[{"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\index.js":"1","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\App.js":"2","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\CitySearch.js":"3","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\WeatherCondition.js":"4","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\Forecast.js":"5","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\functions\\loadData.js":"6","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\functions\\useDebounce.js":"7","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\WeatherIcon.js":"8","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\functions\\conversionToCorrect.js":"9","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\redux\\store.js":"10","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\redux\\actions.js":"11"},{"size":346,"mtime":1630341558581,"results":"12","hashOfConfig":"13"},{"size":1319,"mtime":1630414670729,"results":"14","hashOfConfig":"13"},{"size":972,"mtime":1630407735303,"results":"15","hashOfConfig":"13"},{"size":770,"mtime":1630342443348,"results":"16","hashOfConfig":"13"},{"size":1836,"mtime":1630416234007,"results":"17","hashOfConfig":"13"},{"size":349,"mtime":1628850863696,"results":"18","hashOfConfig":"13"},{"size":393,"mtime":1628940055555,"results":"19","hashOfConfig":"13"},{"size":621,"mtime":1630416910307,"results":"20","hashOfConfig":"13"},{"size":619,"mtime":1629285205525,"results":"21","hashOfConfig":"13"},{"size":718,"mtime":1630414798313,"results":"22","hashOfConfig":"13"},{"size":1279,"mtime":1630416191763,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"70qhgp",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\index.js",[],["53","54"],"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\App.js",["55","56","57"],"import React, { useCallback, useEffect } from 'react';\nimport useDebounce from './functions/useDebounce';\n\nimport Forecast from './components/Forecast';\nimport CitySearch from './components/CitySearch';\n\nimport { setCity } from './redux/actions';\nimport store from './redux/store';\nimport { fetchWeather } from './redux/store';\nimport { connect } from 'react-redux';\n\nconst App = (props) => {\n  useEffect(() => {\n    if (localStorage.location && props.location === \"\") {\n      store.dispatch(setCity(localStorage.getItem('location')));\n      // return () => {\n      //   location.onChange(localStorage.setItem('location', location));\n      // };\n    }\n  }, [])\n\n  useEffect(() => {\n    return () => {\n      localStorage.setItem('location', props.location);\n    };\n  }, [])\n\n  const debouncedLocation = useDebounce(props.location.trim(), 700);\n\n  const memoLoadWeather = useCallback(fetchWeather(debouncedLocation), [debouncedLocation]);\n\n  useEffect(() => {\n    if (debouncedLocation) {\n      memoLoadWeather();\n    }\n  }, [debouncedLocation, memoLoadWeather]);\n\n  return ( \n      <div className=\"app flex-container\">\n        <CitySearch/>\n        <Forecast/>\n      </div>\n  );\n}\n\n\nconst mapStateToProps = (state) => {\n  const { location } = state;\n  return { location };\n}\nexport default connect(mapStateToProps)(App);","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\CitySearch.js",["58","59"],"import React, { useEffect, useState } from 'react';\r\nimport AutosizeInput from 'react-input-autosize';\r\nimport WeatherCondition from './WeatherCondition';\r\nimport './CitySearch.css';\r\nimport { connect } from 'react-redux';\r\nimport { setCity } from '../redux/actions';\r\n\r\nconst CitySearch = (props) => {\r\n  return (\r\n    <div className=\"city-search\">\r\n      <h1>Right now in</h1>\r\n      <AutosizeInput\r\n        type=\"text\"\r\n        minWidth=\"70\"\r\n        inputStyle={{ fontSize: 35, fontWeight: 600, display: 'block' }}\r\n        value={props.location}\r\n        onChange={(e) => props.onChange(e)}\r\n      />\r\n      <WeatherCondition/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { location } = state;\r\n  return { location };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChange: (event) => {\r\n      dispatch(setCity(event.target.value))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CitySearch);","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\WeatherCondition.js",["60","61"],"import React, { useEffect, useState } from 'react';\r\nimport './WeatherCondition.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst WeatherCondition = (props) => {\r\n  const { location } = props;\r\n  const { responseLocation } = props;\r\n  const { condition } = props;\r\n\r\n  if (!condition || location.toLowerCase() !== responseLocation.toLowerCase()) {\r\n    return (\r\n      <span></span>\r\n    );\r\n  }\r\n\r\n  if (condition) {\r\n    return (\r\n      <div className=\"condition\">{condition}</div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { location } = state;\r\n  const { responseLocation } = state;\r\n  const { condition } = state;\r\n\r\n  return { location, responseLocation, condition };\r\n}\r\n\r\nexport default connect(mapStateToProps)(WeatherCondition);\r\n\r\n","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\Forecast.js",["62","63","64","65","66"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport WeatherIcon from './WeatherIcon';\r\nimport './Forecast.css';\r\n\r\nconst Forecast = (props) => {\r\n  const { location } = props;\r\n  const { responseLocation } = props;\r\n  const { country } = props;\r\n  const { temp } = props;\r\n  const { wind } = props;\r\n  const { pressure } = props;\r\n  const { humidity } = props;\r\n  const { code } = props;\r\n  const { isDay } = props;\r\n\r\n  // Conversion from kph to m/s\r\n  const windToMPS = (wind * 1000 / 3600).toFixed(1);\r\n  // Conversion from millibars to millimeters of mercury according to the formula\r\n  const pressureToMmOfMercury = ( pressure * 0.750063755419211).toFixed();\r\n  if (!temp || location.toLowerCase() !== responseLocation.toLowerCase()) {\r\n    return (\r\n      <div></div>\r\n    );\r\n  }\r\n\r\n  if (temp) {\r\n    return (\r\n      <div className=\"weather grid\">\r\n        <WeatherIcon></WeatherIcon>\r\n        <div className=\"temp\">\r\n          <h1>{temp.toFixed()}</h1>\r\n        </div>\r\n        <div className=\"flex properties\">\r\n          <div className=\"properties__value\">{windToMPS}<span>m/s</span></div>\r\n\r\n          <div className=\"properties__value\">{pressureToMmOfMercury}<span>mm Hg</span></div>\r\n          <div className=\"properties__value\">{humidity}<span>%</span></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { location } = state;\r\n  const { responseLocation } = state;\r\n  const { country } = state;\r\n  const { temp } = state;\r\n  const { wind } = state;\r\n  const { pressure } = state;\r\n  const { humidity } = state;\r\n  const { code } = state;\r\n  const { isDay } = state;\r\n\r\n  return { location, responseLocation, country, temp, wind, pressure, humidity, code, isDay };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Forecast);","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\functions\\loadData.js",[],"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\functions\\useDebounce.js",["67"],"import React, { useEffect, useState } from 'react';\r\n\r\nfunction useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      const handler = setTimeout(() => setDebouncedValue(value), delay);\r\n      return () => clearTimeout(handler);\r\n    }, [delay, value],\r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n\r\nexport default useDebounce;","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\WeatherIcon.js",["68"],"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\functions\\conversionToCorrect.js",[],"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\redux\\store.js",[],"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\redux\\actions.js",["69"],"export const SET_CITY = 'SET_CITY';\r\nexport const UPDATE_WEATHER = 'UPDATE_WEATHER';\r\n\r\nexport function setCity(city) {\r\n  return { type: SET_CITY, city }\r\n}\r\n\r\nexport function updateWeather(response) {\r\n  return { type: UPDATE_WEATHER, payload: response }\r\n}\r\n\r\nexport const initialState = {\r\n  location: '',\r\n  responseLocation: '',\r\n  country: '',\r\n  temp: '',\r\n  condition: '',\r\n  wind: '',\r\n  pressure: '',\r\n  humidity: '',\r\n  code: '',\r\n  isDay: ''\r\n}\r\n\r\nexport function weatherApp(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CITY:\r\n      return Object.assign({}, state, {\r\n        location: action.city\r\n      })\r\n    case UPDATE_WEATHER:\r\n      return Object.assign({}, state, {\r\n        responseLocation: action.payload.location.name,\r\n        country: action.payload.location.country,\r\n        temp: action.payload.current.temp_c,\r\n        condition: `it's ${(action.payload.current.condition.text).toLowerCase()}`,\r\n        wind: action.payload.current.wind_kph,\r\n        pressure: action.payload.current.pressure_mb,\r\n        humidity: action.payload.current.humidity,\r\n        code: action.payload.current.condition.code,\r\n        isDay: action.payload.current.is_day\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n  return state;\r\n}\r\n",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":20,"column":6,"nodeType":"76","endLine":20,"endColumn":8,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"75","line":26,"column":6,"nodeType":"76","endLine":26,"endColumn":8,"suggestions":"78"},{"ruleId":"74","severity":1,"message":"79","line":30,"column":27,"nodeType":"80","endLine":30,"endColumn":38},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"80","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"84","line":1,"column":28,"nodeType":"80","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"80","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"84","line":1,"column":28,"nodeType":"80","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"80","messageId":"83","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"84","line":1,"column":28,"nodeType":"80","messageId":"83","endLine":1,"endColumn":36},{"ruleId":"81","severity":1,"message":"85","line":10,"column":11,"nodeType":"80","messageId":"83","endLine":10,"endColumn":18},{"ruleId":"81","severity":1,"message":"86","line":15,"column":11,"nodeType":"80","messageId":"83","endLine":15,"endColumn":15},{"ruleId":"81","severity":1,"message":"87","line":16,"column":11,"nodeType":"80","messageId":"83","endLine":16,"endColumn":16},{"ruleId":"81","severity":1,"message":"88","line":1,"column":8,"nodeType":"80","messageId":"83","endLine":1,"endColumn":13},{"ruleId":"89","severity":1,"message":"90","line":16,"column":7,"nodeType":"91","endLine":16,"endColumn":119},{"ruleId":"92","severity":1,"message":"93","line":46,"column":3,"nodeType":"94","messageId":"95","endLine":46,"endColumn":16},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location'. Either include it or remove the dependency array.","ArrayExpression",["98"],["99"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","Identifier","no-unused-vars","'useEffect' is defined but never used.","unusedVar","'useState' is defined but never used.","'country' is assigned a value but never used.","'code' is assigned a value but never used.","'isDay' is assigned a value but never used.","'React' is defined but never used.","jsx-a11y/alt-text","Embedded <object> elements must have alternative text by providing inner text, aria-label or aria-labelledby props.","JSXOpeningElement","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"100","fix":"102"},"Update the dependencies array to be: [props.location]",{"range":"103","text":"104"},{"range":"105","text":"104"},[657,659],"[props.location]",[769,771]]