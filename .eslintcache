[{"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\index.js":"1","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\App.js":"2","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\CitySearch.js":"3","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\WeatherCondition.js":"4","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\Forecast.js":"5","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\functions\\loadData.js":"6","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\functions\\useDebounce.js":"7","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\WeatherIcon.js":"8","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\functions\\conversionToCorrect.js":"9"},{"size":141,"mtime":1628794301586,"results":"10","hashOfConfig":"11"},{"size":2420,"mtime":1629285851922,"results":"12","hashOfConfig":"11"},{"size":728,"mtime":1629288959564,"results":"13","hashOfConfig":"11"},{"size":504,"mtime":1629288705854,"results":"14","hashOfConfig":"11"},{"size":1216,"mtime":1629290310465,"results":"15","hashOfConfig":"11"},{"size":349,"mtime":1628850863696,"results":"16","hashOfConfig":"11"},{"size":393,"mtime":1628940055555,"results":"17","hashOfConfig":"11"},{"size":437,"mtime":1629279341822,"results":"18","hashOfConfig":"11"},{"size":619,"mtime":1629285205525,"results":"19","hashOfConfig":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ymkdik",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"70qhgp","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\index.js",[],"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\App.js",["45","46","47"],"import React, { useCallback, useEffect, useState } from 'react';\nimport { debounce } from 'lodash';\n\nimport Forecast from './components/Forecast';\nimport CitySearch from './components/CitySearch';\n\nimport useDebounce from './functions/useDebounce';\nimport loadData from './functions/loadData';\n\nconst App = () => {\n  const [location, setLocation] = useState('');\n  const [responseLocation, setResponseLocation] = useState('');\n  const [country, setCountry] = useState('');\n  const [temp, setTemp] = useState('');\n  const [condition, setCondition] = useState('');\n  const [wind, setWind] = useState('');\n  const [precip, setPrecip] = useState('');\n  const [humidity, setHumidity] = useState('');\n  const [code, setCode] = useState('');\n  const [isDay, setIsDay] = useState('');\n\n  useEffect(() => {\n    if (localStorage.location && location === \"\") {\n      setLocation(localStorage.getItem('location'));\n      return () => {\n        location.onChange(localStorage.setItem('location', location));\n      };\n    }\n  }, [])\n\n  const debouncedLocation = useDebounce(location, 700);\n  // console.log(conversionToCorrect(location));\n\n  const loadWeather = async () => {\n    try {\n      const data = await (loadData(debouncedLocation));\n      setResponseLocation(data.location.name);\n      setCountry(data.location.country);\n      setTemp(data.current.temp_c);\n      setCondition(`it's ${(data.current.condition.text).toLowerCase()}`);\n      setWind(data.current.wind_mph);\n      setPrecip(data.current.precip_mm);\n      setHumidity(data.current.humidity);\n      setCode(data.current.condition.code);\n      setIsDay(data.current.is_day);\n\n      localStorage.setItem('location', location);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const memoLoadWeather = useCallback(loadWeather, [debouncedLocation]);\n\n  useEffect(() => {\n    if (debouncedLocation) {\n      memoLoadWeather();\n    }\n  }, [debouncedLocation, memoLoadWeather]);\n\n  const handleEvent = (event) => {\n    setLocation(event.target.value)\n  }\n\n  return (\n    <div className=\"app\">\n      <CitySearch value={location} onChange={handleEvent} condition={condition} location={debouncedLocation} responseLocation={responseLocation} />\n      <Forecast location={debouncedLocation} responseLocation={responseLocation} country={country} temp={temp} wind={wind} precip={precip} humidity={humidity} code={code} isDay={isDay} />\n    </div>\n  );\n}\n\nexport default App;","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\CitySearch.js",["48","49","50"],"import React, { useEffect, useState } from 'react';\r\nimport AutosizeInput from 'react-input-autosize';\r\nimport WeatherCondition from './WeatherCondition';\r\nimport './CitySearch.css';\r\nimport { upperCase } from 'lodash';\r\n\r\nconst CitySearch = (props) => {\r\n  return (\r\n    <div className=\"city-search\">\r\n      <h1>Right now in</h1>\r\n      <AutosizeInput\r\n        type=\"text\"\r\n        minWidth=\"70\"\r\n        inputStyle={{ fontSize: 35, fontWeight: 600, display: 'block' }}\r\n        value={props.value}\r\n        onChange={(e) => props.onChange(e)}\r\n      />\r\n      <WeatherCondition condition={props.condition} location={props.location} responseLocation={props.responseLocation} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CitySearch;","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\WeatherCondition.js",["51","52"],"import React, { useEffect, useState } from 'react';\r\nimport './WeatherCondition.css';\r\n\r\nconst WeatherCondition = (props) => {\r\n  const { location } = props;\r\n  const { responseLocation } = props;\r\n  const { condition } = props;\r\n\r\n  if (!condition || location.toLowerCase() !== responseLocation.toLowerCase()) {\r\n    return (\r\n      <span></span>\r\n    );\r\n  }\r\n\r\n  if (condition) {\r\n    return (\r\n      <div className=\"condition\">{condition}</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherCondition;\r\n\r\n","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\Forecast.js",["53","54","55"],"import React, { useEffect, useState } from 'react';\r\nimport WeatherIcon from './WeatherIcon';\r\nimport './Forecast.css';\r\n\r\nconst Forecast = (props) => {\r\n  const { location } = props;\r\n  const { responseLocation } = props;\r\n  const { country } = props;\r\n  const { temp } = props;\r\n  const { wind } = props;\r\n  const { precip } = props;\r\n  const { humidity } = props;\r\n  const { code } = props;\r\n  const { isDay } = props;\r\n\r\n  // const { icon } = props;\r\n\r\n  if (!temp || location.toLowerCase() !== responseLocation.toLowerCase()) {\r\n    return (\r\n      <div></div>\r\n    );\r\n  }\r\n\r\n  if (temp) {\r\n    return (\r\n      <div className=\"weather flex\">\r\n        <div className=\"weather__icon-temp flex\">\r\n          <WeatherIcon code={code} isDay={isDay}></WeatherIcon>\r\n          <div className=\"temp\">\r\n            <h1>{temp.toFixed()}</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex properties\">\r\n          <div className=\"properties__value\">{wind}<span>mph</span></div>\r\n          <div className=\"properties__value\">{precip}<span>mm</span></div>\r\n          <div className=\"properties__value\">{humidity}<span>%</span></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Forecast;","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\functions\\loadData.js",[],"C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\functions\\useDebounce.js",["56"],"import React, { useEffect, useState } from 'react';\r\n\r\nfunction useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      const handler = setTimeout(() => setDebouncedValue(value), delay);\r\n      return () => clearTimeout(handler);\r\n    }, [delay, value],\r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n\r\nexport default useDebounce;","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\components\\WeatherIcon.js",["57"],"import React from 'react';\r\nimport './WeatherIcon.css';\r\n\r\nconst WeatherIcon = (props) => {\r\n  const { code, isDay } = props;\r\n  let timeOfDay = \"day\";\r\n\r\n  if (!isDay) {\r\n    timeOfDay = \"night\";\r\n  }\r\n\r\n  const weatherSrc = `/assets/icons/${timeOfDay}/${code}.svg`;\r\n\r\n  return (\r\n    <div>\r\n      <object data={process.env.PUBLIC_URL + weatherSrc} type=\"image/svg+xml\" id=\"icon\" />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default WeatherIcon;","C:\\Users\\dany2\\Projects\\weather-by-evergreen\\src\\functions\\conversionToCorrect.js",[],{"ruleId":"58","severity":1,"message":"59","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":18},{"ruleId":"62","severity":1,"message":"63","line":29,"column":6,"nodeType":"64","endLine":29,"endColumn":8,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":53,"column":52,"nodeType":"64","endLine":53,"endColumn":71,"suggestions":"67"},{"ruleId":"58","severity":1,"message":"68","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":26},{"ruleId":"58","severity":1,"message":"69","line":1,"column":28,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"70","line":5,"column":10,"nodeType":"60","messageId":"61","endLine":5,"endColumn":19},{"ruleId":"58","severity":1,"message":"68","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":26},{"ruleId":"58","severity":1,"message":"69","line":1,"column":28,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"68","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":26},{"ruleId":"58","severity":1,"message":"69","line":1,"column":28,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"58","severity":1,"message":"71","line":8,"column":11,"nodeType":"60","messageId":"61","endLine":8,"endColumn":18},{"ruleId":"58","severity":1,"message":"72","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":16,"column":7,"nodeType":"75","endLine":16,"endColumn":91},"no-unused-vars","'debounce' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useCallback has a missing dependency: 'location'. Either include it or remove the dependency array.",["77"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'upperCase' is defined but never used.","'country' is assigned a value but never used.","'React' is defined but never used.","jsx-a11y/alt-text","Embedded <object> elements must have alternative text by providing inner text, aria-label or aria-labelledby props.","JSXOpeningElement",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [location]",{"range":"82","text":"83"},"Update the dependencies array to be: [debouncedLocation, location]",{"range":"84","text":"85"},[1015,1017],"[location]",[1785,1804],"[debouncedLocation, location]"]