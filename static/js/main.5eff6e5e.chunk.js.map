{"version":3,"sources":["components/UI/checkbox/MyButton.module.css","functions/loadData.js","store/weatherReducer.js","store/favoriteCitiesReducer.js","store/store.js","components/CitiesList.js","components/WeatherCondition.js","components/UI/checkbox/FavoriteButton.js","components/CitySearch.js","components/WeatherIcon.js","components/Forecast.js","components/WeatherToday.js","functions/useDebounce.js","historyVar.js","App.js","index.js"],"names":["module","exports","loadData","location","a","fetch","response","json","data","console","log","error","SET_CITY","UPDATE_WEATHER","setCity","city","type","payload","initialState","responseLocation","country","temp","condition","wind","pressure","humidity","code","isDay","ADD_TO_FAVORITES","REMOVE_FROM_FAVORITES","GET_CITIES","citiesState","arrOfCities","addToFavorites","dispatch","store","addCity","removeFromFavorites","removeCity","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","rootReducer","combineReducers","cities","state","action","filter","weatherData","toLowerCase","name","current","temp_c","text","wind_kph","pressure_mb","is_day","createStore","CitiesList","JSON","parse","localStorage","getItem","length","className","map","connect","props","FavoriteButton","isFavorite","Checkbox","checked","icon","FavoriteBorder","checkedIcon","Favorite","size","sx","color","favoriteCities","onChange","event","target","value","useState","includes","setFavorite","useEffect","setItem","stringify","onClick","minWidth","inputStyle","fontSize","fontWeight","display","e","timeOfDay","weatherSrc","process","windToMPS","toFixed","pressureToMmOfMercury","WeatherToday","useDebounce","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","history","createBrowserHistory","debouncedLocation","trim","memoLoadWeather","useCallback","fetchWeather","exact","path","citiesStr","theme","createTheme","palette","primary","main","darker","secondary","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.5eff6e5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Favorite\":\"MyButton_Favorite__3LgFy\"};","const loadData = async (location) => {\r\n  try {\r\n    const response = await fetch(`https://api.weatherapi.com/v1/current.json?key=7de576d75ec1409fbc9122745211208&q=${location}&aqi=no`);\r\n    const data = await response.json();\r\n    console.log(data);\r\n    return data;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default loadData;","import loadData from \"../functions/loadData\";\r\nimport store from \"./store\";\r\n\r\nexport const SET_CITY = \"SET_CITY\";\r\nexport const UPDATE_WEATHER = \"UPDATE_WEATHER\";\r\n\r\nexport function setCity(city) {\r\n    return { type: SET_CITY, payload: city };\r\n}\r\n\r\nexport function updateWeather(response) {\r\n    return { type: UPDATE_WEATHER, payload: response };\r\n}\r\n\r\nexport const initialState = {\r\n    location: \"\",\r\n    responseLocation: \"\",\r\n    country: \"\",\r\n    temp: \"\",\r\n    condition: \"\",\r\n    wind: \"\",\r\n    pressure: \"\",\r\n    humidity: \"\",\r\n    code: \"\",\r\n    isDay: \"\"\r\n};\r\n\r\nexport function weatherReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CITY:\r\n            return { ...state, location: action.payload.toLowerCase() };\r\n        case UPDATE_WEATHER:\r\n            return {\r\n                ...state,\r\n                responseLocation: action.payload.location.name,\r\n                country: action.payload.location.country,\r\n                temp: action.payload.current.temp_c,\r\n                condition: `it's ${action.payload.current.condition.text.toLowerCase()}`,\r\n                wind: action.payload.current.wind_kph,\r\n                pressure: action.payload.current.pressure_mb,\r\n                humidity: action.payload.current.humidity,\r\n                code: action.payload.current.condition.code,\r\n                isDay: action.payload.current.is_day,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const fetchWeather = (debouncedLocation) => async (dispatch) => {\r\n    try {\r\n        const data = await (loadData(debouncedLocation));\r\n        store.dispatch(updateWeather(data));\r\n        localStorage.setItem('location', data.location.name);\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n}","import store from \"./store\";\n\nexport const ADD_TO_FAVORITES = \"ADD_TO_FAVORITES\";\nexport const REMOVE_FROM_FAVORITES = \"REMOVE_FROM_FAVORITES\";\nexport const GET_CITIES = \"GET_CITIES\";\n\nexport function addCity(city) {\n  return { type: ADD_TO_FAVORITES, payload: city };\n}\n\nexport function removeCity(city) {\n  return { type: REMOVE_FROM_FAVORITES, payload: city };\n}\n\nexport function getCitiesFromLocaleStorage(cities) {\n  return { type: GET_CITIES, payload: cities };\n}\n\nexport const citiesState = {\n  arrOfCities: [],\n};\n\nexport function favoriteCitiesReducer(state = citiesState, action) {\n  switch (action.type) {\n    case ADD_TO_FAVORITES:\n      return { ...state, arrOfCities: [...state.arrOfCities, action.payload] };\n    case REMOVE_FROM_FAVORITES:\n      return {\n        ...state,\n        arrOfCities: state.arrOfCities.filter(\n          (city) => city !== action.payload\n        ),\n      };\n    case GET_CITIES:\n      return {\n        ...state,\n        arrOfCities: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const addToFavorites = (city) => (dispatch) => {\n  store.dispatch(addCity(city));\n};\nexport const removeFromFavorites = (city) => (dispatch) => {\n  store.dispatch(removeCity(city));\n};","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {weatherReducer} from \"./weatherReducer\";\r\nimport {favoriteCitiesReducer} from \"./favoriteCitiesReducer\";\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n\r\nconst rootReducer = combineReducers( {\r\n  cities: favoriteCitiesReducer,\r\n  weatherData: weatherReducer\r\n})\r\n\r\nlet store = createStore(rootReducer, composedEnhancer);\r\nexport default store;","import React from \"react\";\r\nimport \"../styles/CitiesList.css\";\r\n\r\nconst CitiesList = () => {\r\n    const cities = JSON.parse(localStorage.getItem(\"cities\"));\r\n  if(cities.length > 0) {\r\n      return (\r\n          <div className=\"cities-list\">\r\n              {cities.map(city =>\r\n                  <div className=\"city\">{city}</div>\r\n              )}\r\n          </div>\r\n      )\r\n  } else {\r\n      return (\r\n          <h1 className=\"empty-list\">\r\n              Oops! You haven't added any city to your favorites yet!\r\n          </h1>\r\n          )\r\n  }\r\n\r\n};\r\nexport default CitiesList;\r\n","import React from 'react';\r\nimport '../styles/WeatherCondition.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst WeatherCondition = (props) => {\r\n  if (!props.condition || props.location.toLowerCase() !== props.responseLocation.toLowerCase()) {\r\n    return (\r\n      <span/>\r\n    );\r\n  }\r\n\r\n  if (props.condition) {\r\n    return (\r\n      <div className=\"condition\">{props.condition}</div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  location: state.weatherData.location,\r\n  responseLocation: state.weatherData.responseLocation,\r\n  condition: state.weatherData.condition,\r\n})\r\n\r\nexport default connect(mapStateToProps)(WeatherCondition);\r\n\r\n","import React from \"react\";\nimport \"./MyButton.module.css\";\nimport {Checkbox} from \"@mui/material\";\nimport {Favorite, FavoriteBorder} from \"@mui/icons-material\";\n\nconst FavoriteButton = ({isFavorite, ...props}) => {\n    return (\n            <Checkbox {...props} checked={isFavorite} icon={<FavoriteBorder />} checkedIcon={<Favorite />} size=\"large\" className=\"Favorite\" sx={{\n                color: 'white',\n                '&.Mui-checked': {\n                    color: 'white',\n                }}}/>\n    )\n};\n\nexport default FavoriteButton;\n","import React, {useEffect, useState} from \"react\";\r\nimport AutosizeInput from \"react-input-autosize\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../styles/CitySearch.css\";\r\nimport WeatherCondition from \"./WeatherCondition\";\r\nimport {\r\n    addToFavorites,\r\n    removeFromFavorites\r\n} from \"../store/favoriteCitiesReducer\";\r\nimport {setCity} from \"../store/weatherReducer\";\r\nimport FavoriteButton from \"./UI/checkbox/FavoriteButton\";\r\n\r\n\r\nconst CitySearch = (props) => {\r\n    const [isFavorite, setFavorite] = useState(props.favoriteCities.includes(props.location))\r\n\r\n    useEffect(() => {\r\n        setFavorite(props.favoriteCities.includes(props.location));\r\n    }, [props.location]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"cities\", JSON.stringify(props.favoriteCities))\r\n    }, [props.favoriteCities]);\r\n\r\n  return (\r\n    <div className=\"city-search\">\r\n      <FavoriteButton\r\n          isFavorite={isFavorite}\r\n        onClick={() => {\r\n            if(!isFavorite) {\r\n              props.addToFavorites(props.location)\r\n                setFavorite(!isFavorite);\r\n            } else {\r\n                props.removeFromFavorites(props.location)\r\n                setFavorite(!isFavorite);\r\n            }\r\n        }}\r\n      />\r\n      <h1>Right now in</h1>\r\n      <AutosizeInput\r\n        type=\"text\"\r\n        minWidth=\"70\"\r\n        inputStyle={{ fontSize: 35, fontWeight: 600, display: \"block\" }}\r\n        value={props.location}\r\n        onChange={(e) => props.onChange(e)}\r\n      />\r\n      <WeatherCondition />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  location: state.weatherData.location,\r\n  favoriteCities: state.cities.arrOfCities\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (event) => {\r\n    dispatch(setCity(event.target.value));\r\n  },\r\n    addToFavorites: (city) => {\r\n        dispatch(addToFavorites(city));\r\n    },\r\n    removeFromFavorites: (city) => {\r\n        dispatch(removeFromFavorites(city));\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CitySearch);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst WeatherIcon = (props) => {\r\n  let timeOfDay = \"day\";\r\n  if (!props.isDay) {\r\n    timeOfDay = \"night\";\r\n  }\r\n\r\n  const weatherSrc = `/assets/icons/${timeOfDay}/${props.code}.svg`;\r\n\r\n  return (\r\n    <div className=\"icon\">\r\n      <object data={process.env.PUBLIC_URL + weatherSrc} type=\"image/svg+xml\" className=\"icon\"/>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  code: state.weatherData.code,\r\n  isDay: state.weatherData.isDay\r\n})\r\nexport default connect(mapStateToProps)(WeatherIcon);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport WeatherIcon from './WeatherIcon';\r\nimport '../styles/Forecast.css';\r\n\r\nconst Forecast = (props) => {\r\n  // Conversion from kph to m/s\r\n  const windToMPS = (props.wind * 1000 / 3600).toFixed(1);\r\n  // Conversion from millibars to millimeters of mercury according to the formula\r\n  const pressureToMmOfMercury = ( props.pressure * 0.750063755419211).toFixed();\r\n  if (!props.temp || props.location.toLowerCase() !== props.responseLocation.toLowerCase()) {\r\n    return (\r\n      <div></div>\r\n    );\r\n  }\r\n\r\n  if (props.temp) {\r\n    return (\r\n      <div className=\"weather grid\">\r\n        <WeatherIcon />\r\n        <div className=\"temp\">\r\n          <h1>{props.temp.toFixed()}</h1>\r\n        </div>\r\n        <div className=\"flex properties\">\r\n          <div className=\"properties__value\">{windToMPS}<span>m/s</span></div>\r\n\r\n          <div className=\"properties__value\">{pressureToMmOfMercury}<span>mm Hg</span></div>\r\n          <div className=\"properties__value\">{props.humidity}<span>%</span></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  location: state.weatherData.location,\r\n  responseLocation: state.weatherData.responseLocation,\r\n  country: state.weatherData.country,\r\n  temp: state.weatherData.temp,\r\n  wind: state.weatherData.wind,\r\n  pressure: state.weatherData.pressure,\r\n  humidity: state.weatherData.humidity,\r\n  code: state.weatherData.code,\r\n  isDay: state.weatherData.isDay\r\n});\r\n\r\nexport default connect(mapStateToProps)(Forecast);\r\n","import React from \"react\";\nimport CitySearch from \"./CitySearch\";\nimport Forecast from \"./Forecast\";\n\nconst WeatherToday = () => {\n  return (\n    <div className=\"app flex-container\">\n      <CitySearch />\n      <Forecast />\n    </div>\n  );\n};\n\nexport default WeatherToday;\n","import { useEffect, useState } from 'react';\r\n\r\nfunction useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      const handler = setTimeout(() => setDebouncedValue(value), delay);\r\n      return () => clearTimeout(handler);\r\n    }, [delay, value],\r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n\r\nexport default useDebounce;","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Router, Switch } from 'react-router-dom';\r\nimport CitiesList from './components/CitiesList';\r\nimport WeatherToday from './components/WeatherToday';\r\nimport useDebounce from './functions/useDebounce';\r\nimport { history } from './historyVar';\r\nimport store from './store/store';\r\nimport {fetchWeather, setCity} from \"./store/weatherReducer\";\r\n\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    if (localStorage.getItem('location') && props.location === '') {\r\n      store.dispatch(setCity(localStorage.getItem('location')));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      localStorage.setItem('location', props.location);\r\n    };\r\n  }, []);\r\n\r\n  const debouncedLocation = useDebounce(props.location.trim(), 700);\r\n\r\n  const memoLoadWeather = useCallback(fetchWeather(debouncedLocation), [debouncedLocation]);\r\n\r\n  useEffect(() => {\r\n    if (debouncedLocation) {\r\n      memoLoadWeather();\r\n    }\r\n  }, [debouncedLocation, memoLoadWeather]);\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/weather-by-evergreen\">\r\n          <WeatherToday />\r\n        </Route>\r\n        <Route exact path=\"/city/:name\">\r\n          <WeatherToday />\r\n        </Route>\r\n        <Route exact path=\"/cities\">\r\n          <CitiesList />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  location: state.weatherData.location,\r\n  favoriteCities: state.cities.arrOfCities\r\n});\r\nexport default connect(mapStateToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\n\r\nimport App from './App';\r\nimport './index.css';\r\nimport './styles/adaptiveApp.css'\r\nimport {getCitiesFromLocaleStorage} from \"./store/favoriteCitiesReducer\";\r\nimport {createTheme} from \"@mui/material\";\r\nimport {ThemeProvider} from \"@emotion/react\";\r\n\r\nif(!localStorage.getItem('cities')) {\r\n    localStorage.setItem('cities', '[]');\r\n} else {\r\n    const citiesStr = localStorage.getItem('cities')\r\n    const cities = JSON.parse(citiesStr);\r\n    store.dispatch(getCitiesFromLocaleStorage(cities));\r\n}\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#ffffff',\r\n            darker: '#ffffff'\r\n        },\r\n        secondary: {\r\n            main: '#ffffff',\r\n            darker: '#ffffff'\r\n        }\r\n    }\r\n});\r\n\r\nconst rootElement = document.getElementById('root')\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n    <App />\r\n      </ThemeProvider>\r\n  </Provider>,\r\n  rootElement\r\n)\r\n"],"sourceRoot":""}