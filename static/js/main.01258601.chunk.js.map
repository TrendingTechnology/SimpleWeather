{"version":3,"sources":["components/WeatherIcon.js","components/Forecast.js","components/WeatherCondition.js","components/CitySearch.js","functions/useDebounce.js","functions/loadData.js","App.js","index.js"],"names":["WeatherIcon","props","code","timeOfDay","isDay","weatherSrc","className","data","process","type","Forecast","location","responseLocation","temp","country","wind","pressure","humidity","toLowerCase","toFixed","WeatherCondition","condition","CitySearch","minWidth","inputStyle","fontSize","fontWeight","display","value","onChange","e","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","loadData","a","fetch","response","json","console","log","error","App","setLocation","setResponseLocation","setCountry","setTemp","setCondition","setWind","setPressure","setHumidity","setCode","setIsDay","localStorage","getItem","setItem","debouncedLocation","loadWeather","name","current","temp_c","text","wind_kph","pressure_mb","is_day","memoLoadWeather","useCallback","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01258601.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst WeatherIcon = (props) => {\r\n  const { code, isDay } = props;\r\n  let timeOfDay = \"day\";\r\n\r\n  if (!isDay) {\r\n    timeOfDay = \"night\";\r\n  }\r\n\r\n  const weatherSrc = `/assets/icons/${timeOfDay}/${code}.svg`;\r\n\r\n  return (\r\n    <div className=\"icon\">\r\n      <object data={process.env.PUBLIC_URL + weatherSrc} type=\"image/svg+xml\" className=\"icon\" />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default WeatherIcon;","import React, { useEffect, useState } from 'react';\r\nimport WeatherIcon from './WeatherIcon';\r\nimport './Forecast.css';\r\n\r\nconst Forecast = (props) => {\r\n  const { location } = props;\r\n  const { responseLocation } = props;\r\n  const { country } = props;\r\n  const { temp } = props;\r\n  const { wind } = props;\r\n  const { pressure } = props;\r\n  const { humidity } = props;\r\n  const { code } = props;\r\n  const { isDay } = props;\r\n\r\n  if (!temp || location.toLowerCase() !== responseLocation.toLowerCase()) {\r\n    return (\r\n      <div></div>\r\n    );\r\n  }\r\n\r\n  if (temp) {\r\n    return (\r\n      <div className=\"weather grid\">\r\n        <WeatherIcon code={code} isDay={isDay} className=\"icon\"></WeatherIcon>\r\n        <div className=\"temp\">\r\n          <h1>{temp.toFixed()}</h1>\r\n        </div>\r\n        <div className=\"flex properties\">\r\n          <div className=\"properties__value\">{wind}<span>m/s</span></div>\r\n\r\n          <div className=\"properties__value\">{pressure}<span>mm Hg</span></div>\r\n          <div className=\"properties__value\">{humidity}<span>%</span></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Forecast;","import React, { useEffect, useState } from 'react';\r\nimport './WeatherCondition.css';\r\n\r\nconst WeatherCondition = (props) => {\r\n  const { location } = props;\r\n  const { responseLocation } = props;\r\n  const { condition } = props;\r\n\r\n  if (!condition || location.toLowerCase() !== responseLocation.toLowerCase()) {\r\n    return (\r\n      <span></span>\r\n    );\r\n  }\r\n\r\n  if (condition) {\r\n    return (\r\n      <div className=\"condition\">{condition}</div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherCondition;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport AutosizeInput from 'react-input-autosize';\r\nimport WeatherCondition from './WeatherCondition';\r\nimport './CitySearch.css';\r\nimport { upperCase } from 'lodash';\r\n\r\nconst CitySearch = (props) => {\r\n  return (\r\n    <div className=\"city-search\">\r\n      <h1>Right now in</h1>\r\n      <AutosizeInput\r\n        type=\"text\"\r\n        minWidth=\"70\"\r\n        inputStyle={{ fontSize: 35, fontWeight: 600, display: 'block' }}\r\n        value={props.value}\r\n        onChange={(e) => props.onChange(e)}\r\n      />\r\n      <WeatherCondition condition={props.condition} location={props.location} responseLocation={props.responseLocation} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CitySearch;","import React, { useEffect, useState } from 'react';\r\n\r\nfunction useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      const handler = setTimeout(() => setDebouncedValue(value), delay);\r\n      return () => clearTimeout(handler);\r\n    }, [delay, value],\r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n\r\nexport default useDebounce;","const loadData = async (location) => {\r\n  try {\r\n    const response = await fetch(`https://api.weatherapi.com/v1/current.json?key=7de576d75ec1409fbc9122745211208&q=${location}&aqi=no`);\r\n    const data = await response.json();\r\n    console.log(data);\r\n    return data;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default loadData;","import React, { useCallback, useEffect, useState } from 'react';\nimport { debounce } from 'lodash';\n\nimport Forecast from './components/Forecast';\nimport CitySearch from './components/CitySearch';\n\nimport useDebounce from './functions/useDebounce';\nimport loadData from './functions/loadData';\n\nconst App = () => {\n  const [location, setLocation] = useState('');\n  const [responseLocation, setResponseLocation] = useState('');\n  const [country, setCountry] = useState('');\n  const [temp, setTemp] = useState('');\n  const [condition, setCondition] = useState('');\n  const [wind, setWind] = useState('');\n  const [pressure, setPressure] = useState('');\n  const [humidity, setHumidity] = useState('');\n  const [code, setCode] = useState('');\n  const [isDay, setIsDay] = useState('');\n\n  useEffect(() => {\n    if (localStorage.location && location === \"\") {\n      setLocation(localStorage.getItem('location'));\n      return () => {\n        location.onChange(localStorage.setItem('location', location));\n      };\n    }\n  }, [])\n\n  const debouncedLocation = useDebounce(location, 700);\n\n  const loadWeather = async () => {\n    try {\n      const data = await (loadData(debouncedLocation));\n      setResponseLocation(data.location.name);\n      setCountry(data.location.country);\n      setTemp(data.current.temp_c);\n      setCondition(`it's ${(data.current.condition.text).toLowerCase()}`);\n      // Conversion from kph to meters per second\n      setWind((data.current.wind_kph * 1000 / 3600).toFixed(1));\n      // Conversion from millibars to millimeters of mercury according to the formula\n      setPressure((data.current.pressure_mb * 0.750063755419211).toFixed());\n      setHumidity(data.current.humidity);\n      setCode(data.current.condition.code);\n      setIsDay(data.current.is_day);\n\n      localStorage.setItem('location', location);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const memoLoadWeather = useCallback(loadWeather, [debouncedLocation]);\n\n  useEffect(() => {\n    if (debouncedLocation) {\n      memoLoadWeather();\n    }\n  }, [debouncedLocation, memoLoadWeather]);\n\n  const handleEvent = (event) => {\n    setLocation(event.target.value)\n  }\n\n  return (\n    <div className=\"app flex-container\">\n      <CitySearch value={location} onChange={handleEvent} condition={condition} location={debouncedLocation} responseLocation={responseLocation} />\n      <Forecast location={debouncedLocation} responseLocation={responseLocation} country={country} temp={temp} wind={wind} pressure={pressure} humidity={humidity} code={code} isDay={isDay} />\n    </div>\n  );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './adapt.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}