{"version":3,"sources":["components/Weather.js","components/Condition.js","components/CitySearch.js","helpers/loadData.js","App.js","index.js"],"names":["Weather","props","temp","location","responseCity","className","Condition","condition","CitySearch","minWidth","inputStyle","fontSize","value","onChange","e","loadData","a","fetch","response","json","data","console","log","error","App","useState","setLocation","setTemp","setResponseCity","setCondition","loadWeather","current","temp_c","name","text","toLowerCase","useEffect","event","target","ReactDOM","render","document","getElementById"],"mappings":"yRAwBeA,EArBC,SAACC,GACf,IAAQC,EAASD,EAATC,KACAC,EAAaF,EAAbE,SACAC,EAAiBH,EAAjBG,aAER,OAAKF,GAAQC,IAAaC,EAMtBF,EAEA,sBAAKG,UAAU,iBAAf,UACE,iEAAoCF,EAApC,OACA,uCAAUD,EAAV,+BAJN,EAJI,yB,gBCUSI,EAlBG,SAACL,GACjB,IAAQE,EAAaF,EAAbE,SACAC,EAAiBH,EAAjBG,aACAG,EAAcN,EAAdM,UAER,OAAKA,GAAaJ,IAAaC,EAM3BG,EAEA,+BAAOA,SAFX,EAJI,0BCWSC,G,MAfI,SAACP,GAClB,OACE,sBAAKI,UAAU,cAAf,yBAEE,cAAC,IAAD,CACEI,SAAS,KACTC,WAAY,CAAEC,SAAU,IACxBC,MAAOX,EAAMW,MACbC,SAAU,SAACC,GAAD,OAAOb,EAAMY,SAASC,MAElC,cAAC,EAAD,CAAWP,UAAWN,EAAMM,UAAWJ,SAAUF,EAAME,SAAUC,aAAcH,EAAMG,oBCF5EW,EAbD,uCAAG,WAAOZ,GAAP,iBAAAa,EAAA,+EAEUC,MAAM,oFAAD,OAAqFd,EAArF,YAFf,cAEPe,EAFO,gBAGMA,EAASC,OAHf,cAGPC,EAHO,OAIbC,QAAQC,IAAIF,GAJC,kBAKNA,GALM,kCAObC,QAAQE,MAAR,MAPa,0DAAH,sDCsCCC,EAjCH,WACV,MAAgCC,mBAAS,IAAzC,mBAAOtB,EAAP,KAAiBuB,EAAjB,KACA,EAAwBD,mBAAS,IAAjC,mBAAOvB,EAAP,KAAayB,EAAb,KACA,EAAwCF,mBAAS,IAAjD,mBAAOrB,EAAP,KAAqBwB,EAArB,KACA,EAAkCH,mBAAS,IAA3C,mBAAOlB,EAAP,KAAkBsB,EAAlB,KAEMC,EAAW,uCAAG,4BAAAd,EAAA,+EAEGD,EAASZ,GAFZ,OAEViB,EAFU,OAGhBO,EAAQP,EAAKW,QAAQC,QACrBJ,EAAgBR,EAAKjB,SAAS8B,MAC9BJ,EAAa,UAAD,OAAYT,EAAKW,QAAQxB,UAAU2B,KAAMC,gBALrC,gDAOhBd,QAAQE,MAAR,MAPgB,yDAAH,qDAWjBa,qBAAU,WACRN,EAAY3B,KACX,CAAC2B,EAAa3B,IAMjB,OACE,sBAAKE,UAAU,MAAf,UACE,cAAC,EAAD,CAAYO,MAAOT,EAAUU,SANb,SAACwB,GACnBX,EAAYW,EAAMC,OAAO1B,QAK6BL,UAAWA,EAAWJ,SAAUA,EAAUC,aAAcA,IAC5G,cAAC,EAAD,CAASF,KAAMA,EAAMC,SAAUA,EAAUC,aAAcA,QC7B7DmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.202f5186.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Weather.css';\r\n\r\nconst Weather = (props) => {\r\n  const { temp } = props;\r\n  const { location } = props;\r\n  const { responseCity } = props;\r\n\r\n  if (!temp || location !== responseCity) {\r\n    return (\r\n      <div></div>\r\n    );\r\n  }\r\n\r\n  if (temp) {\r\n    return (\r\n      <div className=\"weather border\">\r\n        <h1>How do you like the weather in {location}?</h1>\r\n        <h2>It's {temp} CÂ° outside :)</h2>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Weather;","import React, { useEffect, useState } from 'react';\r\n\r\nconst Condition = (props) => {\r\n  const { location } = props;\r\n  const { responseCity } = props;\r\n  const { condition } = props;\r\n\r\n  if (!condition || location !== responseCity) {\r\n    return (\r\n      <span></span>\r\n    );\r\n  }\r\n\r\n  if (condition) {\r\n    return (\r\n      <span>{condition}</span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Condition;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport AutosizeInput from 'react-input-autosize';\r\nimport Condition from './Condition';\r\nimport './CitySearch.css';\r\n\r\nconst CitySearch = (props) => {\r\n  return (\r\n    <div className=\"city-search\">\r\n      Right now in\r\n      <AutosizeInput\r\n        minWidth=\"70\"\r\n        inputStyle={{ fontSize: 30 }}\r\n        value={props.value}\r\n        onChange={(e) => props.onChange(e)}\r\n      />\r\n      <Condition condition={props.condition} location={props.location} responseCity={props.responseCity} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CitySearch;","const loadData = async (location) => {\r\n  try {\r\n    const response = await fetch(`https://api.weatherapi.com/v1/current.json?key=7de576d75ec1409fbc9122745211208&q=${location}&aqi=no`);\r\n    const data = await response.json();\r\n    console.log(data);\r\n    return data;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default loadData;","import React, { useEffect, useState } from 'react';\nimport Weather from './components/Weather';\nimport CitySearch from './components/CitySearch';\nimport loadData from './helpers/loadData';\n\nconst App = () => {\n  const [location, setLocation] = useState('');\n  const [temp, setTemp] = useState('');\n  const [responseCity, setResponseCity] = useState('');\n  const [condition, setCondition] = useState('');\n\n  const loadWeather = async () => {\n    try {\n      const data = await loadData(location);\n      setTemp(data.current.temp_c);\n      setResponseCity(data.location.name);\n      setCondition(`, it's ${(data.current.condition.text).toLowerCase()}`);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  useEffect(() => {\n    loadWeather(location);\n  }, [loadWeather, location]);\n\n  const handleEvent = (event) => {\n    setLocation(event.target.value)\n  }\n\n  return (\n    <div className=\"app\">\n      <CitySearch value={location} onChange={handleEvent} condition={condition} location={location} responseCity={responseCity} />\n      <Weather temp={temp} location={location} responseCity={responseCity} />\n    </div>\n  );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}