{"version":3,"sources":["components/Forecast.js","components/WeatherCondition.js","components/CitySearch.js","functions/useDebounce.js","functions/loadData.js","App.js","index.js"],"names":["Forecast","props","location","responseLocation","temp","country","wind","precip","humidity","icon","className","src","alt","WeatherCondition","condition","CitySearch","minWidth","inputStyle","fontSize","value","onChange","e","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","loadData","a","fetch","response","json","data","console","log","error","App","setLocation","setResponseLocation","setCountry","setTemp","setCondition","setWind","setPrecip","setHumidity","setIcon","localStorage","getItem","setItem","debouncedLocation","loadWeather","name","current","temp_c","text","toLowerCase","wind_mph","precip_mm","memoLoadWeather","useCallback","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4bc95c3.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Forecast.css';\r\n\r\nconst Forecast = (props) => {\r\n  const { location } = props;\r\n  const { responseLocation } = props;\r\n  const { country } = props;\r\n  const { temp } = props;\r\n  const { wind } = props;\r\n  const { precip } = props;\r\n  const { humidity } = props;\r\n  const { icon } = props;\r\n\r\n  if (!temp || location !== responseLocation) {\r\n    return (\r\n      <div></div>\r\n    );\r\n  }\r\n\r\n  if (temp) {\r\n    return (\r\n      <div className=\"weather flex\">\r\n        <div className=\"weather__icon-temp flex\">\r\n          <img src={icon} alt=\"Weather icon\"></img>\r\n          <div>\r\n            <h1 className=\"temp\">{temp}Â°</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex properties\">\r\n          <div className=\"properties__value\">{wind}<span>mph</span></div>\r\n          <div className=\"properties__value\">{precip}<span>mm</span></div>\r\n          <div className=\"properties__value\">{humidity}<span>%</span></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Forecast;","import React, { useEffect, useState } from 'react';\r\n\r\nconst WeatherCondition = (props) => {\r\n  const { location } = props;\r\n  const { responseLocation } = props;\r\n  const { condition } = props;\r\n\r\n  if (!condition || location !== responseLocation) {\r\n    return (\r\n      <span></span>\r\n    );\r\n  }\r\n\r\n  if (condition) {\r\n    return (\r\n      <span>{condition}</span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherCondition;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport AutosizeInput from 'react-input-autosize';\r\nimport WeatherCondition from './WeatherCondition';\r\nimport './CitySearch.css';\r\n\r\nconst CitySearch = (props) => {\r\n  return (\r\n    <div className=\"city-search\">\r\n      Right now in\r\n      <AutosizeInput\r\n        minWidth=\"70\"\r\n        inputStyle={{ fontSize: 30 }}\r\n        value={props.value}\r\n        onChange={(e) => props.onChange(e)}\r\n      />\r\n      <WeatherCondition condition={props.condition} location={props.location} responseLocation={props.responseLocation} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CitySearch;","import React, { useEffect, useState } from 'react';\r\n\r\nfunction useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      const handler = setTimeout(() => setDebouncedValue(value), delay);\r\n      return () => clearTimeout(handler);\r\n    }, [delay, value],\r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n\r\nexport default useDebounce;","const loadData = async (location) => {\r\n  try {\r\n    const response = await fetch(`https://api.weatherapi.com/v1/current.json?key=7de576d75ec1409fbc9122745211208&q=${location}&aqi=no`);\r\n    const data = await response.json();\r\n    console.log(data);\r\n    return data;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default loadData;","import React, { useCallback, useEffect, useState } from 'react';\nimport { debounce } from 'lodash';\n\nimport Forecast from './components/Forecast';\nimport CitySearch from './components/CitySearch';\n\nimport useDebounce from './functions/useDebounce';\nimport loadData from './functions/loadData';\n\nconst App = () => {\n  const [location, setLocation] = useState('');\n  const [responseLocation, setResponseLocation] = useState('');\n  const [country, setCountry] = useState('');\n  const [temp, setTemp] = useState('');\n  const [condition, setCondition] = useState('');\n  const [wind, setWind] = useState('');\n  const [precip, setPrecip] = useState('');\n  const [humidity, setHumidity] = useState('');\n  const [icon, setIcon] = useState('');\n\n  useEffect(() => {\n    if (localStorage.location && location === \"\") {\n      setLocation(localStorage.getItem('location'));\n      return () => {\n        location.onChange(localStorage.setItem('location', location));\n      };\n    }\n  }, [])\n\n  const debouncedLocation = useDebounce(location, 700);\n\n  const loadWeather = async () => {\n    try {\n      const data = await (loadData(debouncedLocation));\n      setResponseLocation(data.location.name);\n      setCountry(data.location.country);\n      setTemp(data.current.temp_c);\n      setCondition(`it's ${(data.current.condition.text).toLowerCase()}`);\n      setWind(data.current.wind_mph);\n      setPrecip(data.current.precip_mm);\n      setHumidity(data.current.humidity);\n      setIcon(data.current.condition.icon);\n\n      localStorage.setItem('location', location);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const memoLoadWeather = useCallback(loadWeather, [debouncedLocation]);\n\n  useEffect(() => {\n    if (debouncedLocation) {\n      memoLoadWeather();\n    }\n  }, [debouncedLocation, memoLoadWeather]);\n\n  const handleEvent = (event) => {\n    setLocation(event.target.value)\n  }\n\n  return (\n    <div className=\"app\">\n      <CitySearch value={location} onChange={handleEvent} condition={condition} location={debouncedLocation} responseLocation={responseLocation} />\n      <Forecast location={debouncedLocation} responseLocation={responseLocation} country={country} temp={temp} wind={wind} precip={precip} humidity={humidity} icon={icon} />\n    </div>\n  );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}