{"version":3,"sources":["redux/actions.js","functions/loadData.js","redux/store.js","functions/useDebounce.js","components/WeatherIcon.js","components/Forecast.js","components/WeatherCondition.js","components/CitySearch.js","App.js","index.js"],"names":["SET_CITY","UPDATE_WEATHER","setCity","city","type","initialState","location","responseLocation","country","temp","condition","wind","pressure","humidity","code","isDay","loadData","a","fetch","response","json","data","console","log","error","composedEnhancer","composeWithDevTools","applyMiddleware","thunkMiddleware","store","createStore","state","action","Object","assign","payload","name","current","temp_c","text","toLowerCase","wind_kph","pressure_mb","is_day","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","connect","props","timeOfDay","weatherSrc","className","process","alt","windToMPS","toFixed","pressureToMmOfMercury","dispatch","onChange","event","target","minWidth","inputStyle","fontSize","fontWeight","display","e","localStorage","getItem","setItem","debouncedLocation","trim","memoLoadWeather","useCallback","fetchWeather","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mTAAaA,EAAW,WACXC,EAAiB,iBAEvB,SAASC,EAAQC,GACtB,MAAO,CAAEC,KAAMJ,EAAUG,QAOpB,IAAME,EAAe,CAC1BC,SAAU,GACVC,iBAAkB,GAClBC,QAAS,GACTC,KAAM,GACNC,UAAW,GACXC,KAAM,GACNC,SAAU,GACVC,SAAU,GACVC,KAAM,GACNC,MAAO,I,oBCRMC,EAbD,uCAAG,WAAOV,GAAP,iBAAAW,EAAA,+EAEUC,MAAM,oFAAD,OAAqFZ,EAArF,YAFf,cAEPa,EAFO,gBAGMA,EAASC,OAHf,cAGPC,EAHO,OAIbC,QAAQC,IAAIF,GAJC,kBAKNA,GALM,kCAObC,QAAQE,MAAR,MAPa,0DAAH,sDCMRC,EAAmBC,8BAAoBC,0BAAgBC,MAEzDC,EAAQC,uBFgBL,WAAmD,IAA/BC,EAA8B,uDAAtB1B,EAAc2B,EAAQ,uCACvD,OAAQA,EAAO5B,MACb,KAAKJ,EACH,OAAOiC,OAAOC,OAAO,GAAIH,EAAO,CAC9BzB,SAAU0B,EAAO7B,OAErB,KAAKF,EACH,OAAOgC,OAAOC,OAAO,GAAIH,EAAO,CAC9BxB,iBAAkByB,EAAOG,QAAQ7B,SAAS8B,KAC1C5B,QAASwB,EAAOG,QAAQ7B,SAASE,QACjCC,KAAMuB,EAAOG,QAAQE,QAAQC,OAC7B5B,UAAU,QAAD,OAAWsB,EAAOG,QAAQE,QAAQ3B,UAAU6B,KAAMC,eAC3D7B,KAAMqB,EAAOG,QAAQE,QAAQI,SAC7B7B,SAAUoB,EAAOG,QAAQE,QAAQK,YACjC7B,SAAUmB,EAAOG,QAAQE,QAAQxB,SACjCC,KAAMkB,EAAOG,QAAQE,QAAQ3B,UAAUI,KACvCC,MAAOiB,EAAOG,QAAQE,QAAQM,SAElC,QACE,OAAOZ,EAEX,OAAOA,IErC2BN,GAYrBI,I,QCLAe,MAbf,SAAqBC,EAAOC,GAC1B,MAA4CC,mBAASF,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KASA,OAPAC,qBACE,WACE,IAAMC,EAAUC,YAAW,kBAAMH,EAAkBJ,KAAQC,GAC3D,OAAO,kBAAMO,aAAaF,MACzB,CAACL,EAAOD,IAGNG,G,OCaMM,eAJS,SAACvB,GAEvB,MAAO,CAAEjB,KADeiB,EAAhBjB,KACOC,MADSgB,EAAVhB,SAGDuC,EAtBK,SAACC,GACnB,IAAQzC,EAAgByC,EAAhBzC,KACJ0C,EAAY,MADQD,EAAVxC,QAIZyC,EAAY,SAGd,IAAMC,EAAU,wBAAoBD,EAApB,YAAiC1C,EAAjC,QAEhB,OACE,qBAAK4C,UAAU,OAAf,SACE,wBAAQrC,KAAMsC,wBAAyBF,EAAYrD,KAAK,gBAAgBsD,UAAU,OAAOE,IAAI,yBC4CpFN,G,MAAAA,aAdS,SAACvB,GAWvB,MAAO,CAAEzB,SAVYyB,EAAbzB,SAUWC,iBATUwB,EAArBxB,iBAS6BC,QARjBuB,EAAZvB,QAQsCC,KAP7BsB,EAATtB,KAO4CE,KANnCoB,EAATpB,KAMkDC,SALrCmB,EAAbnB,SAK4DC,SAJ/CkB,EAAblB,SAIsEC,KAH7DiB,EAATjB,KAG4EC,MAFlEgB,EAAVhB,SAKKuC,EArDE,SAACC,GAChB,IAAQjD,EAAaiD,EAAbjD,SACAC,EAAqBgD,EAArBhD,iBAEAE,GADY8C,EAAZ/C,QACS+C,EAAT9C,MACAE,EAAS4C,EAAT5C,KACAC,EAAa2C,EAAb3C,SACAC,EAAa0C,EAAb1C,SAKFgD,GAJWN,EAATzC,KACUyC,EAAVxC,OAGkB,IAAPJ,EAAc,MAAMmD,QAAQ,IAEzCC,GAAqC,iBAAXnD,GAA8BkD,UAC9D,OAAKrD,GAAQH,EAASkC,gBAAkBjC,EAAiBiC,cAMrD/B,EAEA,sBAAKiD,UAAU,eAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,OAAf,SACE,6BAAKjD,EAAKqD,cAEZ,sBAAKJ,UAAU,kBAAf,UACE,sBAAKA,UAAU,oBAAf,UAAoCG,EAAU,0CAE9C,sBAAKH,UAAU,oBAAf,UAAoCK,EAAsB,4CAC1D,sBAAKL,UAAU,oBAAf,UAAoC7C,EAAS,mDAXrD,EAJI,4B,iBCOSyC,G,MAAAA,aARS,SAACvB,GAKvB,MAAO,CAAEzB,SAJYyB,EAAbzB,SAIWC,iBAHUwB,EAArBxB,iBAG6BG,UAFfqB,EAAdrB,aAKK4C,EA1BU,SAACC,GACxB,IAAQjD,EAAaiD,EAAbjD,SACAC,EAAqBgD,EAArBhD,iBACAG,EAAc6C,EAAd7C,UAER,OAAKA,GAAaJ,EAASkC,gBAAkBjC,EAAiBiC,cAM1D9B,EAEA,qBAAKgD,UAAU,YAAf,SAA4BhD,SAFhC,EAJI,6BCyBS4C,G,MAAAA,aAbS,SAACvB,GAEvB,MAAO,CAAEzB,SADYyB,EAAbzB,aAIiB,SAAC0D,GAC1B,MAAO,CACLC,SAAU,SAACC,GACTF,EAAS9D,EAAQgE,EAAMC,OAAOtB,YAKrBS,EA7BI,SAACC,GAClB,OACE,sBAAKG,UAAU,cAAf,UACE,8CACA,cAAC,IAAD,CACEtD,KAAK,OACLgE,SAAS,KACTC,WAAY,CAAEC,SAAU,GAAIC,WAAY,IAAKC,QAAS,SACtD3B,MAAOU,EAAMjD,SACb2D,SAAU,SAACQ,GAAD,OAAOlB,EAAMU,SAASQ,MAElC,cAAC,EAAD,WCgCSnB,eAJS,SAACvB,GAEvB,MAAO,CAAEzB,SADYyB,EAAbzB,YAGKgD,EAvCH,SAACC,GACXL,qBAAU,WACJwB,aAAapE,UAA+B,KAAnBiD,EAAMjD,UACjCuB,EAAMmC,SAAS9D,EAAQwE,aAAaC,QAAQ,gBAK7C,IAEHzB,qBAAU,WACR,OAAO,WACLwB,aAAaE,QAAQ,WAAYrB,EAAMjD,aAExC,IAEH,IAAMuE,EAAoBjC,EAAYW,EAAMjD,SAASwE,OAAQ,KAEvDC,EAAkBC,sBNnBE,SAACH,GAAD,8CAAuB,WAAOb,GAAP,eAAA/C,EAAA,+EAE3BD,EAAS6D,GAFkB,OAEzCxD,EAFyC,OAG/CQ,EAAMmC,SFLD,CAAE5D,KAAMH,EAAgBkC,QEKAd,IAC7BqD,aAAaE,QAAQ,WAAYvD,EAAKf,SAAS8B,MAJA,gDAM/Cd,QAAQE,MAAR,MAN+C,yDAAvB,sDMmBUyD,CAAaJ,GAAoB,CAACA,IAQtE,OANA3B,qBAAU,WACJ2B,GACFE,MAED,CAACF,EAAmBE,IAGnB,sBAAKrB,UAAU,qBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UC/BFwB,G,YAAcC,SAASC,eAAe,SAC5CC,IAASC,OACP,cAAC,IAAD,CAAUzD,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFqD,K","file":"static/js/main.2f0f6c2c.chunk.js","sourcesContent":["export const SET_CITY = 'SET_CITY';\r\nexport const UPDATE_WEATHER = 'UPDATE_WEATHER';\r\n\r\nexport function setCity(city) {\r\n  return { type: SET_CITY, city }\r\n}\r\n\r\nexport function updateWeather(response) {\r\n  return { type: UPDATE_WEATHER, payload: response }\r\n}\r\n\r\nexport const initialState = {\r\n  location: '',\r\n  responseLocation: '',\r\n  country: '',\r\n  temp: '',\r\n  condition: '',\r\n  wind: '',\r\n  pressure: '',\r\n  humidity: '',\r\n  code: '',\r\n  isDay: ''\r\n}\r\n\r\nexport function weatherApp(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CITY:\r\n      return Object.assign({}, state, {\r\n        location: action.city\r\n      })\r\n    case UPDATE_WEATHER:\r\n      return Object.assign({}, state, {\r\n        responseLocation: action.payload.location.name,\r\n        country: action.payload.location.country,\r\n        temp: action.payload.current.temp_c,\r\n        condition: `it's ${(action.payload.current.condition.text).toLowerCase()}`,\r\n        wind: action.payload.current.wind_kph,\r\n        pressure: action.payload.current.pressure_mb,\r\n        humidity: action.payload.current.humidity,\r\n        code: action.payload.current.condition.code,\r\n        isDay: action.payload.current.is_day\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n  return state;\r\n}\r\n","const loadData = async (location) => {\r\n  try {\r\n    const response = await fetch(`https://api.weatherapi.com/v1/current.json?key=7de576d75ec1409fbc9122745211208&q=${location}&aqi=no`);\r\n    const data = await response.json();\r\n    console.log(data);\r\n    return data;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default loadData;","import { createStore, applyMiddleware } from 'redux';\r\nimport { weatherApp, updateWeather } from './actions';\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport loadData from '../functions/loadData';\r\n\r\nconst composedEnhancer = composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n\r\nlet store = createStore(weatherApp, composedEnhancer);\r\n\r\nexport const fetchWeather = (debouncedLocation) => async (dispatch) => {\r\n  try {\r\n    const data = await (loadData(debouncedLocation));\r\n    store.dispatch(updateWeather(data));\r\n    localStorage.setItem('location', data.location.name);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nexport default store;","import React, { useEffect, useState } from 'react';\r\n\r\nfunction useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      const handler = setTimeout(() => setDebouncedValue(value), delay);\r\n      return () => clearTimeout(handler);\r\n    }, [delay, value],\r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n\r\nexport default useDebounce;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst WeatherIcon = (props) => {\r\n  const { code, isDay } = props;\r\n  let timeOfDay = \"day\";\r\n\r\n  if (!isDay) {\r\n    timeOfDay = \"night\";\r\n  }\r\n\r\n  const weatherSrc = `/assets/icons/${timeOfDay}/${code}.svg`;\r\n\r\n  return (\r\n    <div className=\"icon\">\r\n      <object data={process.env.PUBLIC_URL + weatherSrc} type=\"image/svg+xml\" className=\"icon\" alt=\"Icon of Weather\"/>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { code, isDay } = state;\r\n  return { code, isDay };\r\n}\r\nexport default connect(mapStateToProps)(WeatherIcon);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport WeatherIcon from './WeatherIcon';\r\nimport './Forecast.css';\r\n\r\nconst Forecast = (props) => {\r\n  const { location } = props;\r\n  const { responseLocation } = props;\r\n  const { country } = props;\r\n  const { temp } = props;\r\n  const { wind } = props;\r\n  const { pressure } = props;\r\n  const { humidity } = props;\r\n  const { code } = props;\r\n  const { isDay } = props;\r\n\r\n  // Conversion from kph to m/s\r\n  const windToMPS = (wind * 1000 / 3600).toFixed(1);\r\n  // Conversion from millibars to millimeters of mercury according to the formula\r\n  const pressureToMmOfMercury = ( pressure * 0.750063755419211).toFixed();\r\n  if (!temp || location.toLowerCase() !== responseLocation.toLowerCase()) {\r\n    return (\r\n      <div></div>\r\n    );\r\n  }\r\n\r\n  if (temp) {\r\n    return (\r\n      <div className=\"weather grid\">\r\n        <WeatherIcon></WeatherIcon>\r\n        <div className=\"temp\">\r\n          <h1>{temp.toFixed()}</h1>\r\n        </div>\r\n        <div className=\"flex properties\">\r\n          <div className=\"properties__value\">{windToMPS}<span>m/s</span></div>\r\n\r\n          <div className=\"properties__value\">{pressureToMmOfMercury}<span>mm Hg</span></div>\r\n          <div className=\"properties__value\">{humidity}<span>%</span></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { location } = state;\r\n  const { responseLocation } = state;\r\n  const { country } = state;\r\n  const { temp } = state;\r\n  const { wind } = state;\r\n  const { pressure } = state;\r\n  const { humidity } = state;\r\n  const { code } = state;\r\n  const { isDay } = state;\r\n\r\n  return { location, responseLocation, country, temp, wind, pressure, humidity, code, isDay };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Forecast);","import React, { useEffect, useState } from 'react';\r\nimport './WeatherCondition.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst WeatherCondition = (props) => {\r\n  const { location } = props;\r\n  const { responseLocation } = props;\r\n  const { condition } = props;\r\n\r\n  if (!condition || location.toLowerCase() !== responseLocation.toLowerCase()) {\r\n    return (\r\n      <span></span>\r\n    );\r\n  }\r\n\r\n  if (condition) {\r\n    return (\r\n      <div className=\"condition\">{condition}</div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { location } = state;\r\n  const { responseLocation } = state;\r\n  const { condition } = state;\r\n\r\n  return { location, responseLocation, condition };\r\n}\r\n\r\nexport default connect(mapStateToProps)(WeatherCondition);\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport AutosizeInput from 'react-input-autosize';\r\nimport WeatherCondition from './WeatherCondition';\r\nimport './CitySearch.css';\r\nimport { connect } from 'react-redux';\r\nimport { setCity } from '../redux/actions';\r\n\r\nconst CitySearch = (props) => {\r\n  return (\r\n    <div className=\"city-search\">\r\n      <h1>Right now in</h1>\r\n      <AutosizeInput\r\n        type=\"text\"\r\n        minWidth=\"70\"\r\n        inputStyle={{ fontSize: 35, fontWeight: 600, display: 'block' }}\r\n        value={props.location}\r\n        onChange={(e) => props.onChange(e)}\r\n      />\r\n      <WeatherCondition/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { location } = state;\r\n  return { location };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onChange: (event) => {\r\n      dispatch(setCity(event.target.value))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CitySearch);","import React, { useCallback, useEffect } from 'react';\r\nimport useDebounce from './functions/useDebounce';\r\n\r\nimport Forecast from './components/Forecast';\r\nimport CitySearch from './components/CitySearch';\r\n\r\nimport { setCity } from './redux/actions';\r\nimport store from './redux/store';\r\nimport { fetchWeather } from './redux/store';\r\nimport { connect } from 'react-redux';\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    if (localStorage.location && props.location === \"\") {\r\n      store.dispatch(setCity(localStorage.getItem('location')));\r\n      // return () => {\r\n      //   location.onChange(localStorage.setItem('location', location));\r\n      // };\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      localStorage.setItem('location', props.location);\r\n    };\r\n  }, [])\r\n\r\n  const debouncedLocation = useDebounce(props.location.trim(), 700);\r\n\r\n  const memoLoadWeather = useCallback(fetchWeather(debouncedLocation), [debouncedLocation]);\r\n\r\n  useEffect(() => {\r\n    if (debouncedLocation) {\r\n      memoLoadWeather();\r\n    }\r\n  }, [debouncedLocation, memoLoadWeather]);\r\n\r\n  return ( \r\n      <div className=\"app flex-container\">\r\n        <CitySearch/>\r\n        <Forecast/>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { location } = state;\r\n  return { location };\r\n}\r\nexport default connect(mapStateToProps)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nimport App from './App';\r\nimport './index.css';\r\nimport './adaptive.css'\r\n\r\nconst rootElement = document.getElementById('root')\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n)\r\n"],"sourceRoot":""}